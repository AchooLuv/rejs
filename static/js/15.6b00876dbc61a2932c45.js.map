{"version":3,"sources":["webpack:///src/pages/mp/recall/Recall.vue","webpack:///./src/pages/mp/recall/Recall.vue?e833","webpack:///./src/pages/mp/recall/Recall.vue"],"names":["recall_Recall","render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_m","staticRenderFns","Component","__webpack_require__","normalizeComponent","name","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/15.6b00876dbc61a2932c45.js","sourcesContent":["<template>\r\n  <div class=\"mpc-con\">\r\n    <h2>正则引擎的匹配规则</h2>\r\n    <p><span class=\"ins\">NFA引擎最重要的性质就是支持回溯，那么哪些情况下发生回溯呢？会发生回溯的情况有两种：匹配优先/忽略优先/占有优先量词；多选分支结构。回溯机制的基本原理不难理解，记住两个基本规则：</span></p>\r\n    <h3><span class=\"iconfont jh\">&#xe64a;</span>面对众多分支选择时，哪个分支应当首先选择？</h3>\r\n    <p><span class=\"ins\">若需要在“进行尝试”和“跳过尝试”之间选择，对于匹配优先量词，引擎会优先选择“进行尝试”，而对于忽略优先量词，会选择“跳过尝试”！</span></p>\r\n    <h3><span class=\"iconfont jh\">&#xe64a;</span>回溯时，应选择哪个保存的状态？</h3>\r\n    <p><span class=\"ins\">距离当前最近储存的选项（即备用状态）就是本地失败强制回溯时返回的！</span></p>\r\n    <p><span class=\"ins\">对于NFA引擎来说，“备用状态”是引擎进行回溯的基础，“备用状态”会保存两个位置：正则表达式中的位置和未尝试的分支在字符串中的位置。在需要回溯时，“备用状态”告诉NFA引擎，匹配可以从此处开始！</span></p>\r\n    <p>来看一些简单的例子：</p>\r\n    <h3><span class=\"iconfont jh\">&#xe64a;</span>匹配未进行回溯的例子</h3>\r\n    <p><span class=\"ins\">使用正则表达式<span class=\"reg\">/Lu?v/</span>匹配字符串<span class=\"reg\">Luv</span>：当字符<span class=\"reg\">L</span>匹配成功后，匹配的当前状态如下</span></p>\r\n    <table class=\"ms\">\r\n      <thead>\r\n        <tr>\r\n          <th>字符串状态</th>\r\n          <th>表达式状态</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>'L<span class=\"trs\"></span>uv'</td>\r\n          <td>L<span class=\"trs\"></span>u?v</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p><span class=\"ins\">现在该<span class=\"reg\">u?</span>匹配了，此时正则引擎需要决定：是尝试匹配呢？还是跳过匹配？因为<span class=\"reg\">?</span>是匹配优先量词，所以引擎会尝试匹配。但为了确保这个尝试最最终失败后能够恢复，NFA引擎会把以下状态添加到备用状态序列中：</span></p>\r\n    <table class=\"ms\">\r\n      <thead>\r\n        <tr>\r\n          <th>字符串状态</th>\r\n          <th>表达式状态</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>'L<span class=\"trs\"></span>uv'</td>\r\n          <td>Lu?<span class=\"trs\"></span>v</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p><span class=\"ins\">该\"备用状态\"告诉引擎：下次匹配从正则表达式的<span class=\"reg\">u?</span>之后，字符串的字符<span class=\"reg\">v</span>之前开始匹配（即跳过<span class=\"reg\">u</span>匹配）。之后继续检查字符<span class=\"reg\">u</span>，能够匹配，状态更新为：</span></p>\r\n    <table class=\"ms\">\r\n      <thead>\r\n        <tr>\r\n          <th>字符串状态</th>\r\n          <th>表达式状态</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>'Lu<span class=\"trs\"></span>v'</td>\r\n          <td>Lu?<span class=\"trs\"></span>v</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p><span class=\"ins\">继续检查字符<span class=\"reg\">v</span>，也能满足匹配，此时整个匹配完成，“备用状态”不在被需要，弃用“备用状态”，整个匹配结束。</span></p>\r\n    <h3><span class=\"iconfont jh\">&#xe64a;</span>匹配进行了回溯的例子</h3>\r\n    <p><span class=\"ins\">用上例相同的正则表达式匹配字符串<span class=\"reg\">Lv</span>，在尝试<span class=\"reg\">u</span>之前，一切与上例过程相同，但此时的<spann class=\"reg\">u</spann>无法匹配，引擎开始回溯至最近保存的状态（即该例中唯一的“备用状态”），即：</span></p>\r\n    <table class=\"ms\">\r\n      <thead>\r\n        <tr>\r\n          <th>字符串状态</th>\r\n          <th>表达式状态</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>'L<span class=\"trs\"></span>v'</td>\r\n          <td>Lu?<span class=\"trs\"></span>v</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p><span class=\"ins\">此时<span class=\"reg\">v</span>满足匹配，整个匹配结束！</span></p>\r\n    <h3><span class=\"iconfont jh\">&#xe64a;</span>进行了回溯但匹配失败的例子</h3>\r\n    <p><span class=\"ins\">整个匹配宣告失败是发生在字符串和表达式均完成了所有回溯测试（备用状态）之后，而不是其中某一个完成其所有回溯测试之后！！！举个简单的例子，我们用同样的正则表达式匹配字符串<span class=\"reg\">Lue</span>，在尝试匹配字符<span class=\"reg\">u</span>之前有“备用状态”：</span></p>\r\n    <table class=\"ms\">\r\n      <thead>\r\n        <tr>\r\n          <th>字符串状态</th>\r\n          <th>表达式状态</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>'L<span class=\"trs\"></span>ue'</td>\r\n          <td>Lu?<span class=\"trs\"></span>v</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p><span class=\"ins\">在<span class=\"reg\">u</span>匹配成功后，由于<span class=\"reg\">v</span>无法匹配<span class=\"reg\">e</span>，此时引擎回溯到最近保存状态，“交换”字符<span class=\"reg\">u</span>给<span class=\"reg\">v</span>匹配，依然不能满足匹配，该次回溯测试失败，但是此时不存在其它“备用状态”，所以字符串中当前位置的整个匹配宣告失败！</span></p>\r\n    <p><span class=\"ins\">那么整个匹配就要宣告失败了吗？并不会！，匹配将重新开始于状态：</span></p>\r\n    <table class=\"ms\">\r\n      <thead>\r\n        <tr>\r\n          <th>字符串状态</th>\r\n          <th>表达式状态</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>'L<span class=\"trs\"></span>ue'</td>\r\n          <td><span class=\"trs\"></span>Lu?v</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p><span class=\"ins\">但这些均回溯测试以失败告终，最终整个表达式宣告匹配失败，结束匹配！</span></p>\r\n    <h3><span class=\"iconfont jh\">&#xe64a;</span>忽略优先的回溯匹配</h3>\r\n    <p><span class=\"ins\">使用正则表达式<span class=\"reg\">/Lu??v/</span>匹配字符串<span class=\"reg\">Luv</span>。字符<span class=\"reg\">L</span>匹配之后的状态：</span></p>\r\n    <table class=\"ms\">\r\n      <thead>\r\n        <tr>\r\n          <th>字符串状态</th>\r\n          <th>表达式状态</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>'L<span class=\"trs\"></span>uv'</td>\r\n          <td>L<span class=\"trs\"></span>u??v</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p><span class=\"ins\">现在该<span class=\"reg\">u?</span>匹配了，此时正则引擎需要决定：是尝试匹配呢？还是跳过匹配？因为<span class=\"reg\">??</span>是忽略优先量词，所以引擎会跳过匹配。但为了确保这个尝试最最终失败后能够恢复，NFA引擎会把以下状态添加到备用状态序列中：</span></p>\r\n    <table class=\"ms\">\r\n      <thead>\r\n        <tr>\r\n          <th>字符串状态</th>\r\n          <th>表达式状态</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>'L<span class=\"trs\"></span>uv'</td>\r\n          <td>L<span class=\"trs\"></span>uv</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p><span class=\"ins\">保存“备用状态”后，沿着忽略匹配优先的路继续匹配：</span></p>\r\n    <table class=\"ms\">\r\n      <thead>\r\n        <tr>\r\n          <th>字符串状态</th>\r\n          <th>表达式状态</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>'L<span class=\"trs\"></span>uv'</td>\r\n          <td>Lu??<span class=\"trs\"></span>v</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p><span class=\"ins\">但是此时<span class=\"reg\">v</span>无法匹配字符<span class=\"reg\">u</span>，引擎回溯至最近保存状态：</span></p>\r\n    <table class=\"ms\">\r\n      <thead>\r\n        <tr>\r\n          <th>字符串状态</th>\r\n          <th>表达式状态</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>'L<span class=\"trs\"></span>uv'</td>\r\n          <td>L<span class=\"trs\"></span>uv</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p><span class=\"ins\">此时<span class=\"reg\">u</span>能匹配字符<span class=\"reg\">u</span>，接下来的<span class=\"reg\">v</span>也能匹配字符<span class=\"reg\">v</span>，到此，整个匹配宣告成功，匹配结束！   和第一个例子对比会发现：虽然匹配优先<span class=\"reg\">Lu?v</span>和忽略优先<span class=\"reg\">Lu??v</span>得到的结果可能是（在本例中相同）相同的，但是回溯的过程是完全不同的！！！</span></p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Recall'\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import 'sa/styles/var.scss';\r\n.mpc-con {\r\n  @include tip;\r\n  table.ms{\r\n    margin-left: .81rem;\r\n    width: 50%;\r\n    font-size: .25rem;\r\n    thead tr th,tbody tr td {\r\n      line-height: 1.2;\r\n      span.trs{\r\n        display: inline-block;\r\n        width: 0;\r\n        height: 0;\r\n        border: .1rem solid transparent;\r\n        border-bottom-color: rgb(255, 0, 0);\r\n        transform: translateY(.1rem);\r\n      }\r\n    }\r\n    @media (max-width: 1024px){\r\n      width: 80%;\r\n    }\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/pages/mp/recall/Recall.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mpc-con\"},[_c('h2',[_vm._v(\"正则引擎的匹配规则\")]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_vm._m(2),_vm._v(\" \"),_vm._m(3),_vm._v(\" \"),_vm._m(4),_vm._v(\" \"),_vm._m(5),_vm._v(\" \"),_c('p',[_vm._v(\"来看一些简单的例子：\")]),_vm._v(\" \"),_vm._m(6),_vm._v(\" \"),_vm._m(7),_vm._v(\" \"),_vm._m(8),_vm._v(\" \"),_vm._m(9),_vm._v(\" \"),_vm._m(10),_vm._v(\" \"),_vm._m(11),_vm._v(\" \"),_vm._m(12),_vm._v(\" \"),_vm._m(13),_vm._v(\" \"),_vm._m(14),_vm._v(\" \"),_c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"用上例相同的正则表达式匹配字符串\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"Lv\")]),_vm._v(\"，在尝试\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"u\")]),_vm._v(\"之前，一切与上例过程相同，但此时的\"),_c('spann',{staticClass:\"reg\"},[_vm._v(\"u\")]),_vm._v(\"无法匹配，引擎开始回溯至最近保存的状态（即该例中唯一的“备用状态”），即：\")],1)]),_vm._v(\" \"),_vm._m(15),_vm._v(\" \"),_vm._m(16),_vm._v(\" \"),_vm._m(17),_vm._v(\" \"),_vm._m(18),_vm._v(\" \"),_vm._m(19),_vm._v(\" \"),_vm._m(20),_vm._v(\" \"),_vm._m(21),_vm._v(\" \"),_vm._m(22),_vm._v(\" \"),_vm._m(23),_vm._v(\" \"),_vm._m(24),_vm._v(\" \"),_vm._m(25),_vm._v(\" \"),_vm._m(26),_vm._v(\" \"),_vm._m(27),_vm._v(\" \"),_vm._m(28),_vm._v(\" \"),_vm._m(29),_vm._v(\" \"),_vm._m(30),_vm._v(\" \"),_vm._m(31),_vm._v(\" \"),_vm._m(32),_vm._v(\" \"),_vm._m(33)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"NFA引擎最重要的性质就是支持回溯，那么哪些情况下发生回溯呢？会发生回溯的情况有两种：匹配优先/忽略优先/占有优先量词；多选分支结构。回溯机制的基本原理不难理解，记住两个基本规则：\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',[_c('span',{staticClass:\"iconfont jh\"},[_vm._v(\"\")]),_vm._v(\"面对众多分支选择时，哪个分支应当首先选择？\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"若需要在“进行尝试”和“跳过尝试”之间选择，对于匹配优先量词，引擎会优先选择“进行尝试”，而对于忽略优先量词，会选择“跳过尝试”！\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',[_c('span',{staticClass:\"iconfont jh\"},[_vm._v(\"\")]),_vm._v(\"回溯时，应选择哪个保存的状态？\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"距离当前最近储存的选项（即备用状态）就是本地失败强制回溯时返回的！\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"对于NFA引擎来说，“备用状态”是引擎进行回溯的基础，“备用状态”会保存两个位置：正则表达式中的位置和未尝试的分支在字符串中的位置。在需要回溯时，“备用状态”告诉NFA引擎，匹配可以从此处开始！\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',[_c('span',{staticClass:\"iconfont jh\"},[_vm._v(\"\")]),_vm._v(\"匹配未进行回溯的例子\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"使用正则表达式\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"/Lu?v/\")]),_vm._v(\"匹配字符串\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"Luv\")]),_vm._v(\"：当字符\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"L\")]),_vm._v(\"匹配成功后，匹配的当前状态如下\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"ms\"},[_c('thead',[_c('tr',[_c('th',[_vm._v(\"字符串状态\")]),_vm._v(\" \"),_c('th',[_vm._v(\"表达式状态\")])])]),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"'L\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"uv'\")]),_vm._v(\" \"),_c('td',[_vm._v(\"L\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"u?v\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"现在该\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"u?\")]),_vm._v(\"匹配了，此时正则引擎需要决定：是尝试匹配呢？还是跳过匹配？因为\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"?\")]),_vm._v(\"是匹配优先量词，所以引擎会尝试匹配。但为了确保这个尝试最最终失败后能够恢复，NFA引擎会把以下状态添加到备用状态序列中：\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"ms\"},[_c('thead',[_c('tr',[_c('th',[_vm._v(\"字符串状态\")]),_vm._v(\" \"),_c('th',[_vm._v(\"表达式状态\")])])]),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"'L\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"uv'\")]),_vm._v(\" \"),_c('td',[_vm._v(\"Lu?\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"v\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"该\\\"备用状态\\\"告诉引擎：下次匹配从正则表达式的\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"u?\")]),_vm._v(\"之后，字符串的字符\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"v\")]),_vm._v(\"之前开始匹配（即跳过\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"u\")]),_vm._v(\"匹配）。之后继续检查字符\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"u\")]),_vm._v(\"，能够匹配，状态更新为：\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"ms\"},[_c('thead',[_c('tr',[_c('th',[_vm._v(\"字符串状态\")]),_vm._v(\" \"),_c('th',[_vm._v(\"表达式状态\")])])]),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"'Lu\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"v'\")]),_vm._v(\" \"),_c('td',[_vm._v(\"Lu?\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"v\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"继续检查字符\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"v\")]),_vm._v(\"，也能满足匹配，此时整个匹配完成，“备用状态”不在被需要，弃用“备用状态”，整个匹配结束。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',[_c('span',{staticClass:\"iconfont jh\"},[_vm._v(\"\")]),_vm._v(\"匹配进行了回溯的例子\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"ms\"},[_c('thead',[_c('tr',[_c('th',[_vm._v(\"字符串状态\")]),_vm._v(\" \"),_c('th',[_vm._v(\"表达式状态\")])])]),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"'L\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"v'\")]),_vm._v(\" \"),_c('td',[_vm._v(\"Lu?\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"v\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"此时\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"v\")]),_vm._v(\"满足匹配，整个匹配结束！\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',[_c('span',{staticClass:\"iconfont jh\"},[_vm._v(\"\")]),_vm._v(\"进行了回溯但匹配失败的例子\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"整个匹配宣告失败是发生在字符串和表达式均完成了所有回溯测试（备用状态）之后，而不是其中某一个完成其所有回溯测试之后！！！举个简单的例子，我们用同样的正则表达式匹配字符串\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"Lue\")]),_vm._v(\"，在尝试匹配字符\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"u\")]),_vm._v(\"之前有“备用状态”：\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"ms\"},[_c('thead',[_c('tr',[_c('th',[_vm._v(\"字符串状态\")]),_vm._v(\" \"),_c('th',[_vm._v(\"表达式状态\")])])]),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"'L\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"ue'\")]),_vm._v(\" \"),_c('td',[_vm._v(\"Lu?\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"v\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"在\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"u\")]),_vm._v(\"匹配成功后，由于\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"v\")]),_vm._v(\"无法匹配\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"e\")]),_vm._v(\"，此时引擎回溯到最近保存状态，“交换”字符\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"u\")]),_vm._v(\"给\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"v\")]),_vm._v(\"匹配，依然不能满足匹配，该次回溯测试失败，但是此时不存在其它“备用状态”，所以字符串中当前位置的整个匹配宣告失败！\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"那么整个匹配就要宣告失败了吗？并不会！，匹配将重新开始于状态：\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"ms\"},[_c('thead',[_c('tr',[_c('th',[_vm._v(\"字符串状态\")]),_vm._v(\" \"),_c('th',[_vm._v(\"表达式状态\")])])]),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"'L\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"ue'\")]),_vm._v(\" \"),_c('td',[_c('span',{staticClass:\"trs\"}),_vm._v(\"Lu?v\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"但这些均回溯测试以失败告终，最终整个表达式宣告匹配失败，结束匹配！\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',[_c('span',{staticClass:\"iconfont jh\"},[_vm._v(\"\")]),_vm._v(\"忽略优先的回溯匹配\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"使用正则表达式\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"/Lu??v/\")]),_vm._v(\"匹配字符串\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"Luv\")]),_vm._v(\"。字符\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"L\")]),_vm._v(\"匹配之后的状态：\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"ms\"},[_c('thead',[_c('tr',[_c('th',[_vm._v(\"字符串状态\")]),_vm._v(\" \"),_c('th',[_vm._v(\"表达式状态\")])])]),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"'L\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"uv'\")]),_vm._v(\" \"),_c('td',[_vm._v(\"L\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"u??v\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"现在该\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"u?\")]),_vm._v(\"匹配了，此时正则引擎需要决定：是尝试匹配呢？还是跳过匹配？因为\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"??\")]),_vm._v(\"是忽略优先量词，所以引擎会跳过匹配。但为了确保这个尝试最最终失败后能够恢复，NFA引擎会把以下状态添加到备用状态序列中：\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"ms\"},[_c('thead',[_c('tr',[_c('th',[_vm._v(\"字符串状态\")]),_vm._v(\" \"),_c('th',[_vm._v(\"表达式状态\")])])]),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"'L\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"uv'\")]),_vm._v(\" \"),_c('td',[_vm._v(\"L\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"uv\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"保存“备用状态”后，沿着忽略匹配优先的路继续匹配：\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"ms\"},[_c('thead',[_c('tr',[_c('th',[_vm._v(\"字符串状态\")]),_vm._v(\" \"),_c('th',[_vm._v(\"表达式状态\")])])]),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"'L\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"uv'\")]),_vm._v(\" \"),_c('td',[_vm._v(\"Lu??\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"v\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"但是此时\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"v\")]),_vm._v(\"无法匹配字符\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"u\")]),_vm._v(\"，引擎回溯至最近保存状态：\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"ms\"},[_c('thead',[_c('tr',[_c('th',[_vm._v(\"字符串状态\")]),_vm._v(\" \"),_c('th',[_vm._v(\"表达式状态\")])])]),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"'L\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"uv'\")]),_vm._v(\" \"),_c('td',[_vm._v(\"L\"),_c('span',{staticClass:\"trs\"}),_vm._v(\"uv\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"ins\"},[_vm._v(\"此时\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"u\")]),_vm._v(\"能匹配字符\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"u\")]),_vm._v(\"，接下来的\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"v\")]),_vm._v(\"也能匹配字符\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"v\")]),_vm._v(\"，到此，整个匹配宣告成功，匹配结束！   和第一个例子对比会发现：虽然匹配优先\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"Lu?v\")]),_vm._v(\"和忽略优先\"),_c('span',{staticClass:\"reg\"},[_vm._v(\"Lu??v\")]),_vm._v(\"得到的结果可能是（在本例中相同）相同的，但是回溯的过程是完全不同的！！！\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-07b5e9ae\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/mp/recall/Recall.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-07b5e9ae\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Recall.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Recall.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Recall.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-07b5e9ae\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Recall.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-07b5e9ae\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/mp/recall/Recall.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}